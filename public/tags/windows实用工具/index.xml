<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Windows实用工具 on YuChu&#39;s Blog</title>
        <link>http://localhost:1313/tags/windows%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/</link>
        <description>Recent content in Windows实用工具 on YuChu&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <lastBuildDate>Tue, 26 Mar 2024 20:05:34 +0800</lastBuildDate><atom:link href="http://localhost:1313/tags/windows%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>winget的基础配置与使用</title>
        <link>http://localhost:1313/posts/winget%E7%9A%84%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/</link>
        <pubDate>Tue, 26 Mar 2024 20:05:34 +0800</pubDate>
        
        <guid>http://localhost:1313/posts/winget%E7%9A%84%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/</guid>
        <description>&lt;h1 id=&#34;1什么是winget&#34;&gt;&lt;a href=&#34;#1%e4%bb%80%e4%b9%88%e6%98%afwinget&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;1.什么是winget
&lt;/h1&gt;&lt;p&gt;微软公司在 2020 年 5 月 Microsoft Build 开发者大会上发布了用于 Windows 系统的官方支持的软件包管理器 —— Windows 软件包管理器（Windows Package Manager），也就是 WinGet 软件包管理器。经过 3 年的发展，越来越多的软件厂商在这个平台上发布自家软件。WinGet 除了支持 exe、msi 等传统的 Win32 安装包格式外，还支持用于新版 Windows 的 msix/msixbundle 格式所打包的软件。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://learn.microsoft.com/en-us/windows/package-manager&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Windows软件包管理工具&lt;/a&gt;&lt;/p&gt;
&lt;!-- more --&gt;
&lt;h1 id=&#34;2获取winget&#34;&gt;&lt;a href=&#34;#2%e8%8e%b7%e5%8f%96winget&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;2.获取winget
&lt;/h1&gt;&lt;p&gt;首先确认系统是否满足需求：WinGet 只可以运行在 Windows10 高于 1709 (Build 16299) 的版本和 Windows11 上。&lt;/p&gt;
&lt;p&gt;在安装 WinGet 之前，建议使用微软新推出的终端模拟器 Windows Terminal 代替传统的conhost.exe。&lt;/p&gt;
&lt;h2 id=&#34;21-windows1011-非-lts-版本家庭版教育版专业版专业工作站版企业版&#34;&gt;&lt;a href=&#34;#21-windows1011-%e9%9d%9e-lts-%e7%89%88%e6%9c%ac%e5%ae%b6%e5%ba%ad%e7%89%88%e6%95%99%e8%82%b2%e7%89%88%e4%b8%93%e4%b8%9a%e7%89%88%e4%b8%93%e4%b8%9a%e5%b7%a5%e4%bd%9c%e7%ab%99%e7%89%88%e4%bc%81%e4%b8%9a%e7%89%88&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;2.1 Windows10/11 非 LTS 版本（家庭版、教育版、专业版、专业工作站版、企业版）
&lt;/h2&gt;&lt;p&gt;Windows Terminal 和 WinGet 都可以通过系统预装的 Microsoft Store 商店搜索安装，也可以转到下面的网页调用 Microsoft Store 安装，也可以去微软托管在 GitHub 的发布页下载安装包到本地安装（较新版本的 Windows11 已经预装，如已预装请略过此章节）&lt;/p&gt;
&lt;h3 id=&#34;windows-terminal&#34;&gt;&lt;a href=&#34;#windows-terminal&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;Windows Terminal
&lt;/h3&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://apps.microsoft.com/detail/9n0dx20hk701?hl=zh=CN&amp;amp;gl=CN&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Windows Terminal&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;winget&#34;&gt;&lt;a href=&#34;#winget&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;Winget
&lt;/h3&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://apps.microsoft.com/detail/9nblggh4nns1?hl=zh-CN&amp;amp;gl=CN&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Winget&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;22-设置-windows-terminal-为系统默认终端模拟器&#34;&gt;&lt;a href=&#34;#22-%e8%ae%be%e7%bd%ae-windows-terminal-%e4%b8%ba%e7%b3%bb%e7%bb%9f%e9%bb%98%e8%ae%a4%e7%bb%88%e7%ab%af%e6%a8%a1%e6%8b%9f%e5%99%a8&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;2.2 设置 Windows Terminal 为系统默认终端模拟器
&lt;/h2&gt;&lt;p&gt;较新版本的 Windows11 已经默认 Windows Terminal 为系统终端模拟器，如已配置好请略过此章节。&lt;/p&gt;
&lt;p&gt;从命令行窗口标题栏右键菜单进入默认设置,在【终端】选项卡下更改“默认终端应用程序”为“Windows 终端”，确认退出.&lt;/p&gt;
&lt;h2 id=&#34;3-使用-winget-管理软件&#34;&gt;&lt;a href=&#34;#3-%e4%bd%bf%e7%94%a8-winget-%e7%ae%a1%e7%90%86%e8%bd%af%e4%bb%b6&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;3. 使用 WinGet 管理软件
&lt;/h2&gt;&lt;h3 id=&#34;常用命令&#34;&gt;&lt;a href=&#34;#%e5%b8%b8%e7%94%a8%e5%91%bd%e4%bb%a4&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;常用命令
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;查看版本、信息&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;winget -v(winget --version)   #显示winget版本
winget info                   #显示常规信息
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;替换源：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;winget source remove winget
winget source add winget https://mirrors.ustc.edu.cn/winget-source
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;搜索软件包
&lt;code&gt;winget search [包名]&lt;/code&gt;
以7zip为例
&lt;img src=&#34;https://cloud.yuchu.me/f/L1hQ/winget_search.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;winget_search&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查看软件包
&lt;code&gt;winget show --id 7zip.7zip&lt;/code&gt;
&lt;img src=&#34;https://cloud.yuchu.me/f/KEf4/winget_show.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;winget_show&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装软件包
&lt;code&gt;winget install --id 7zip.7zip&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;自定义安装
&lt;code&gt;winget install --id 7zip.7zip -i&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;-指定位置安装
&lt;code&gt;winget install -l,--location [指定路径(如支持)]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;更新软件包
&lt;code&gt;winget upgrade --id 7zip.7zip&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;卸载软件包
&lt;code&gt;winget uninstall --id 7zip.7zip&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;显示已安装的软件包
&lt;code&gt;winget list&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;其他命令&#34;&gt;&lt;a href=&#34;#%e5%85%b6%e4%bb%96%e5%91%bd%e4%bb%a4&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;其他命令
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;winget search --id [包名]                                    #按id筛选结果&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;winget search --name [包名]                                  #按名称筛选&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;winget search --tag [包名]                                   #按标签筛选&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;winget search -s,--source [包名]                             #指定源查找&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;winget search -e,--exact [包名]                              #精确匹配查找&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;winget search --version [包名]                               #显示软件包可用版本&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;winget install --id/--name/--tag/-e,--exact/--version [包名] #与search类似&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;winget install --ignore-security-hash [包名]                 #忽略安装程序哈希检查失败&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;进阶---使用powershell-脚本从网络批量下载来自-winget-的软件包&#34;&gt;&lt;a href=&#34;#%e8%bf%9b%e9%98%b6---%e4%bd%bf%e7%94%a8powershell-%e8%84%9a%e6%9c%ac%e4%bb%8e%e7%bd%91%e7%bb%9c%e6%89%b9%e9%87%8f%e4%b8%8b%e8%bd%bd%e6%9d%a5%e8%87%aa-winget-%e7%9a%84%e8%bd%af%e4%bb%b6%e5%8c%85&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;进阶&amp;mdash;使用PowerShell 脚本从网络批量下载来自 WinGet 的软件包
&lt;/h1&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# Requires -Version 7.0

#更改字符集为UTF-8
#[System.Console]::OutputEncoding=[System.Text.Encoding]::GetEncoding(65001)

# 更新源
# winget source reset winget
# winget source add winget https://mirrors.ustc.edu.cn/winget-source/

Clear-Host

# 写入安装脚本
$Script:PackageCount = 0
$Script:PackageLocalPath = &amp;#34;PackageInstallers&amp;#34;
$Script:PackageList = &amp;#34;PackageInstallers.log&amp;#34;
$Script:PackageScriptIWR = &amp;#34;Get-PackageInstallersIWR.ps1&amp;#34;
$Script:PackageScriptSBT = &amp;#34;Get-PackageInstallersSBT.ps1&amp;#34;
$Script:PackageScriptWCD = &amp;#34;Get-PackageInstallersWCD.ps1&amp;#34;
$Script:PackageLogIWR = [System.String]::Concat($Script:PackageLocalPath, &amp;#34;\PackageInstallersIWR.log&amp;#34;)
$Script:PackageLogSBT = [System.String]::Concat($Script:PackageLocalPath, &amp;#34;\PackageInstallersSBT.log&amp;#34;)
$Script:PackageLogWCD = [System.String]::Concat($Script:PackageLocalPath, &amp;#34;\PackageInstallersWCD.log&amp;#34;)

New-Item -Name $Script:PackageLocalPath -ItemType Directory -Force | Out-Null
Remove-Item $Script:PackageLocalPath\* -Recurse -Force | Out-Null

Write-Output $null | Out-File $Script:PackageList
Write-Output $null | Out-File $Script:PackageScriptIWR
Write-Output $null | Out-File $Script:PackageScriptSBT
Write-Output $null | Out-File $Script:PackageScriptWCD

[System.String]::Concat(&amp;#34;# Updated @ &amp;#34;, (Get-Date -Format &amp;#34;yyyy.MM.dd-HH:mm:ss&amp;#34;)) | Tee-Object $Script:PackageScriptIWR -Append | Tee-Object $Script:PackageScriptSBT -Append | Out-File $Script:PackageScriptWCD -Append
Write-Output &amp;#34;# Requires -Version 7.0&amp;#34; | Tee-Object $Script:PackageScriptIWR -Append | Tee-Object $Script:PackageScriptSBT -Append | Out-File $Script:PackageScriptWCD -Append
Write-Output &amp;#34;`$Script:PackageLocalCount = 0&amp;#34; | Tee-Object $Script:PackageScriptIWR -Append | Tee-Object $Script:PackageScriptSBT -Append | Out-File $Script:PackageScriptWCD -Append
Write-Output &amp;#34;Clear-Host&amp;#34; | Tee-Object $Script:PackageScriptIWR -Append | Tee-Object $Script:PackageScriptSBT -Append | Out-File $Script:PackageScriptWCD -Append
Write-Output &amp;#34;New-Item -Name `&amp;#34;$Script:PackageLocalPath`&amp;#34; -ItemType Directory -Force | Out-Null&amp;#34; | Tee-Object $Script:PackageScriptIWR -Append | Tee-Object $Script:PackageScriptSBT -Append | Out-File $Script:PackageScriptWCD -Append
Write-Output &amp;#34;Remove-Item `&amp;#34;$Script:PackageLocalPath\*`&amp;#34; -Recurse -Force | Out-Null&amp;#34; | Tee-Object $Script:PackageScriptIWR -Append | Tee-Object $Script:PackageScriptSBT -Append | Out-File $Script:PackageScriptWCD -Append
Write-Output &amp;#34;Write-Output `$null | Out-File `&amp;#34;$Script:PackageLogIWR`&amp;#34;&amp;#34; | Out-File $Script:PackageScriptIWR -Append
Write-Output &amp;#34;Write-Output `$null | Out-File `&amp;#34;$Script:PackageLogSBT`&amp;#34;&amp;#34; | Out-File $Script:PackageScriptSBT -Append
Write-Output &amp;#34;Write-Output `$null | Out-File `&amp;#34;$Script:PackageLogWCD`&amp;#34;&amp;#34; | Out-File $Script:PackageScriptWCD -Append

# 安装脚本函数
function Get-WinGetPackageURL {
    param($ID, $Name, $Type, $Class)

    $Private:PackageWinGetID = $ID
    $Private:PackageFilename = $Name
    $Private:PackageFiletype = $Type
    $Private:PackageClassification = $Class
    $Private:PackageLocalClassifiedPath = [System.String]::Concat($Script:PackageLocalPath, &amp;#34;\&amp;#34;, $Private:PackageClassification)

    $Private:FindURL = &amp;#34;安装程序 URL：&amp;#34;
    $Private:FindVER = &amp;#34;版本:&amp;#34;

    # 获取软件包版本和下载地址
    try {
        # System Installer
        $Private:PackageURL = [System.String]::Concat((winget show --scope machine -id $Private:PackageWinGetID | Select-String $Private:FindURL)).Replace($Private:FindURL, &amp;#34;&amp;#34;).Replace(&amp;#34; &amp;#34;, &amp;#34;&amp;#34;)
        $Private:PackageVersion = [System.String]::Concat((winget show --scope machine -id $Private:PackageWinGetID | Select-String $Private:FindVER)).Replace($Private:FindVER, &amp;#34;&amp;#34;).Replace(&amp;#34; &amp;#34;, &amp;#34;&amp;#34;)
    }
    catch [ArgumentNullException] {
        # User Installer
        $Private:PackageURL = [System.String]::Concat((winget show --id $Private:PackageWinGetID | Select-String $Private:FindURL)).Replace($Private:FindURL, &amp;#34;&amp;#34;).Replace(&amp;#34; &amp;#34;, &amp;#34;&amp;#34;)
        $Private:PackageVersion = [System.String]::Concat((winget show --id $Private:PackageWinGetID | Select-String $Private:FindVER)).Replace($Private:FindVER, &amp;#34;&amp;#34;).Replace(&amp;#34; &amp;#34;, &amp;#34;&amp;#34;)
    }

    $Script:PackageCount++
    $Private:PackageLocalFile = [System.String]::Concat($Private:PackageLocalClassifiedPath, &amp;#34;\&amp;#34;, $Private:PackageFilename, &amp;#34;_&amp;#34;, $Private:PackageVersion, &amp;#34;.&amp;#34;, $Private:PackageFiletype)
    $Private:PackageUpdateTime = Get-Date -Format &amp;#34;yyyy.MM.dd-HH:mm:ss&amp;#34;

    $Private:PackageCommandPath = &amp;#34;New-Item -Name `&amp;#34;$Private:PackageLocalClassifiedPath`&amp;#34; -ItemType Directory -Force | Out-Null&amp;#34;
    $Private:PackageCommandItem = &amp;#34;New-Item -Name `&amp;#34;$Private:PackageLocalFile`&amp;#34; -ItemType File -Force | Out-Null&amp;#34;
    $Private:PackageCommandDNS = &amp;#34;ipconfig.exe /flushdns | Out-Null&amp;#34;
    $Private:PackageCommandIWR = &amp;#34;Invoke-WebRequest -Uri `&amp;#34;$Private:PackageURL`&amp;#34; -OutFile `&amp;#34;$Private:PackageLocalFile`&amp;#34;&amp;#34;
    $Private:PackageCommandSBT = &amp;#34;Start-BitsTransfer -Source `&amp;#34;$Private:PackageURL`&amp;#34; -Destination `&amp;#34;$Private:PackageLocalFile`&amp;#34;&amp;#34;
    $Private:PackageCommandWCD = &amp;#34;`$PackageWebClient = New-Object System.Net.WebClient; `$PackageWebClient.DownloadFile(`&amp;#34;$Private:PackageURL`&amp;#34;, `&amp;#34;$Private:PackageLocalFile`&amp;#34;)&amp;#34;
    $Private:PackageCommandLog = &amp;#34;Start-Sleep -Seconds 3; [System.Console]::Out.Flush(); [System.String]::Concat(`&amp;#34;┏━ `&amp;#34;, (Get-Date -Format `&amp;#34;yyyy.MM.dd-HH:mm:ss`&amp;#34;), `&amp;#34; @ $Private:PackageWinGetID`&amp;#34;, `&amp;#34; [$Private:PackageVersion]``n`&amp;#34;, `&amp;#34;┣━ ```&amp;#34;$Private:PackageURL```&amp;#34;``n`&amp;#34;, `&amp;#34;┗━ ```&amp;#34;$Private:PackageLocalFile```&amp;#34;``n`&amp;#34;) | Write-Output&amp;#34;

    Write-Output &amp;#34;┏━ $Private:PackageUpdateTime @ $Private:PackageWinGetID [$Private:PackageVersion]`n┣━ `&amp;#34;$Private:PackageURL`&amp;#34;`n┗━ `&amp;#34;$Private:PackageLocalFile`&amp;#34;`n&amp;#34; | Tee-Object $Script:PackageList -Append
    Write-Output &amp;#34;$Private:PackageCommandPath; $Private:PackageCommandItem; $Private:PackageCommandDNS; $Private:PackageCommandIWR; if (`$?) { `$Script:PackageLocalCount++; $Private:PackageCommandLog | Tee-Object `&amp;#34;$Script:PackageLogIWR`&amp;#34; -Append; }&amp;#34; | Out-File $Script:PackageScriptIWR -Append
    Write-Output &amp;#34;$Private:PackageCommandPath; $Private:PackageCommandItem; $Private:PackageCommandDNS; $Private:PackageCommandSBT; if (`$?) { `$Script:PackageLocalCount++; $Private:PackageCommandLog | Tee-Object `&amp;#34;$Script:PackageLogSBT`&amp;#34; -Append; }&amp;#34; | Out-File $Script:PackageScriptSBT -Append
    Write-Output &amp;#34;$Private:PackageCommandPath; $Private:PackageCommandItem; $Private:PackageCommandDNS; $Private:PackageCommandWCD; if (`$?) { `$Script:PackageLocalCount++; $Private:PackageCommandLog | Tee-Object `&amp;#34;$Script:PackageLogWCD`&amp;#34; -Append; }&amp;#34; | Out-File $Script:PackageScriptWCD -Append

    New-Item -Name $Private:PackageLocalClassifiedPath -ItemType Directory -Force | Out-Null
    New-Item -Name $Private:PackageLocalFile -ItemType File -Force | Out-Null
}

ipconfig /flushdns | Out-Null

# Components
Get-WinGetPackageURL -ID &amp;#34;Microsoft.VCRedist.2005.x86&amp;#34; -Name &amp;#34;Microsoft_Visual_C++_Redistributable_2005_32bit&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Components&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;Microsoft.VCRedist.2005.x64&amp;#34; -Name &amp;#34;Microsoft_Visual_C++_Redistributable_2005_64bit&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Components&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;Microsoft.VCRedist.2008.x86&amp;#34; -Name &amp;#34;Microsoft_Visual_C++_Redistributable_2008_32bit&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Components&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;Microsoft.VCRedist.2008.x64&amp;#34; -Name &amp;#34;Microsoft_Visual_C++_Redistributable_2008_64bit&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Components&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;Microsoft.VCRedist.2010.x86&amp;#34; -Name &amp;#34;Microsoft_Visual_C++_Redistributable_2010_32bit&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Components&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;Microsoft.VCRedist.2010.x64&amp;#34; -Name &amp;#34;Microsoft_Visual_C++_Redistributable_2010_64bit&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Components&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;Microsoft.VCRedist.2012.x86&amp;#34; -Name &amp;#34;Microsoft_Visual_C++_Redistributable_2012_32bit&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Components&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;Microsoft.VCRedist.2012.x64&amp;#34; -Name &amp;#34;Microsoft_Visual_C++_Redistributable_2012_64bit&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Components&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;Microsoft.VCRedist.2013.x86&amp;#34; -Name &amp;#34;Microsoft_Visual_C++_Redistributable_2013_32bit&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Components&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;Microsoft.VCRedist.2013.x64&amp;#34; -Name &amp;#34;Microsoft_Visual_C++_Redistributable_2013_64bit&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Components&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;Microsoft.VCRedist.2015+.x86&amp;#34; -Name &amp;#34;Microsoft_Visual_C++_Redistributable_2015_32bit&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Components&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;Microsoft.VCRedist.2015+.x64&amp;#34; -Name &amp;#34;Microsoft_Visual_C++_Redistributable_2015_64bit&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Components&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;Microsoft.PowerToys&amp;#34; -Name &amp;#34;Microsoft_PowerToys&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;EclipseAdoptium.Temurin.8.JDK&amp;#34; -Name &amp;#34;EclipseAdoptium_Temurin_JDK_8_Releases&amp;#34; -Type &amp;#34;msi&amp;#34; -Class &amp;#34;Components&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;EclipseAdoptium.Temurin.11.JDK&amp;#34; -Name &amp;#34;EclipseAdoptium_Temurin_JDK_11_Releases&amp;#34; -Type &amp;#34;msi&amp;#34; -Class &amp;#34;Components&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;EclipseAdoptium.Temurin.17.JDK&amp;#34; -Name &amp;#34;EclipseAdoptium_Temurin_JDK_17_Releases&amp;#34; -Type &amp;#34;msi&amp;#34; -Class &amp;#34;Components&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;Python.Python.2&amp;#34; -Name &amp;#34;Python_2_Dev&amp;#34; -Type &amp;#34;msi&amp;#34; -Class &amp;#34;Components&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;Python.Python.3.8&amp;#34; -Name &amp;#34;Python_3.8_Dev&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Components&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;Python.Python.3.11&amp;#34; -Name &amp;#34;Python_3.11_Dev&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Components&amp;#34;

# Applications
Get-WinGetPackageURL -ID &amp;#34;7zip.7zip&amp;#34; -Name &amp;#34;7_Zip&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;Anaconda.Anaconda3&amp;#34; -Name &amp;#34;Anaconda3&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;Apple.iTunes&amp;#34; -Name &amp;#34;iTunes&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;Audacity.Audacity&amp;#34; -Name &amp;#34;Audacity&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;Bandisoft.Bandizip&amp;#34; -Name &amp;#34;Bandizip&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;Bandisoft.Honeyview&amp;#34; -Name &amp;#34;Honeyview&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;Bitvise.SSH.Server&amp;#34; -Name &amp;#34;Bitvise_SSH_Server&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;BlenderFoundation.Blender&amp;#34; -Name &amp;#34;Blender&amp;#34; -Type &amp;#34;msi&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;Codeblocks.Codeblocks&amp;#34; -Name &amp;#34;Codeblocks&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;darktable.darktable&amp;#34; -Name &amp;#34;darktable&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;den4b.Hasher&amp;#34; -Name &amp;#34;Hasher&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;den4b.ReNamer&amp;#34; -Name &amp;#34;ReNamer&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;DEVCOM.JetBrainsMonoNerdFont&amp;#34; -Name &amp;#34;Nerd_Fonts&amp;#34; -Type &amp;#34;msi&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;Geany.Geany&amp;#34; -Name &amp;#34;Geany&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;GeekUninstaller.GeekUninstaller&amp;#34; -Name &amp;#34;Geek_Uninstaller&amp;#34; -Type &amp;#34;zip&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;GIMP.GIMP&amp;#34; -Name &amp;#34;GIMP&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;Git.Git&amp;#34; -Name &amp;#34;Git&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;GitHub.Atom&amp;#34; -Name &amp;#34;Atom&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;GitHub.GitHubDesktop&amp;#34; -Name &amp;#34;GitHubDesktop&amp;#34; -Type &amp;#34;msi&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;GNU.Octave&amp;#34; -Name &amp;#34;Octave&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;gnuplot.gnuplot&amp;#34; -Name &amp;#34;gnuplot&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;Google.Chrome&amp;#34; -Name &amp;#34;Google_Chrome&amp;#34; -Type &amp;#34;msi&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;HandBrake.HandBrake&amp;#34; -Name &amp;#34;HandBrake&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;Harmonoid.Harmonoid&amp;#34; -Name &amp;#34;Harmonoid&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;Henry++.MemReduct&amp;#34; -Name &amp;#34;MemReduct&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;JanDeDobbeleer.OhMyPosh&amp;#34; -Name &amp;#34;Oh_My_Posh&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;KDE.Kate&amp;#34; -Name &amp;#34;Kate&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;KDE.Krita&amp;#34; -Name &amp;#34;Krita&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;KDE.Okular&amp;#34; -Name &amp;#34;Okular&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;Kitware.CMake&amp;#34; -Name &amp;#34;CMake&amp;#34; -Type &amp;#34;msi&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;LLVM.LLVM&amp;#34; -Name &amp;#34;LLVM&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;Meltytech.Shotcut&amp;#34; -Name &amp;#34;Shotcut&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;MHNexus.HxD&amp;#34; -Name &amp;#34;HxD&amp;#34; -Type &amp;#34;zip&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;Microsoft.VisualStudio.2022.Community&amp;#34; -Name &amp;#34;Microsoft_Visual_Studio_2022_Community&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;Microsoft.VisualStudioCode&amp;#34; -Name &amp;#34;Microsoft_Visual_Studio_Code&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;Mozilla.Firefox&amp;#34; -Name &amp;#34;Firefox&amp;#34; -Type &amp;#34;msi&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;Mozilla.Thunderbird&amp;#34; -Name &amp;#34;Thunderbird&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;Musescore.Musescore&amp;#34; -Name &amp;#34;Musescore&amp;#34; -Type &amp;#34;msi&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;OBSProject.OBSStudio&amp;#34; -Name &amp;#34;OBSStudio&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;Pinta.Pinta&amp;#34; -Name &amp;#34;Pinta&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;Piriform.Recuva&amp;#34; -Name &amp;#34;Recuva&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;RealVNC.VNCViewer&amp;#34; -Name &amp;#34;VNCViewer&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;Rufus.Rufus&amp;#34; -Name &amp;#34;Rufus&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;ShiningLight.OpenSSL&amp;#34; -Name &amp;#34;OpenSSL&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;SSHFS-Win.SSHFS-Win&amp;#34; -Name &amp;#34;SSHFS&amp;#34; -Type &amp;#34;msi&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;Tencent.QQ&amp;#34; -Name &amp;#34;Tencent_QQ&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;Tencent.TencentMeeting&amp;#34; -Name &amp;#34;Tencent_Meeting&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;Tencent.WeChat&amp;#34; -Name &amp;#34;Tencent_WeChat&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;TheDocumentFoundation.LibreOffice&amp;#34; -Name &amp;#34;LibreOffice&amp;#34; -Type &amp;#34;msi&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;TortoiseGit.TortoiseGit&amp;#34; -Name &amp;#34;TortoiseGit&amp;#34; -Type &amp;#34;msi&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;TortoiseHg.TortoiseHg&amp;#34; -Name &amp;#34;TortoiseHg&amp;#34; -Type &amp;#34;msi&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;TortoiseSVN.TortoiseSVN&amp;#34; -Name &amp;#34;TortoiseSVN&amp;#34; -Type &amp;#34;msi&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;uGetdm.uGet&amp;#34; -Name &amp;#34;uGet&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;VideoLAN.VLC&amp;#34; -Name &amp;#34;VideoLAN_VLC&amp;#34; -Type &amp;#34;msi&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;vim.vim&amp;#34; -Name &amp;#34;GVIM&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;voidtools.Everything&amp;#34; -Name &amp;#34;Everything&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;WinFsp.WinFsp&amp;#34; -Name &amp;#34;WinFsp&amp;#34; -Type &amp;#34;msi&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;WiresharkFoundation.Wireshark&amp;#34; -Name &amp;#34;Wireshark&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;XnSoft.XnConvert&amp;#34; -Name &amp;#34;XnConvert&amp;#34; -Type &amp;#34;exe&amp;#34; -Class &amp;#34;Applications&amp;#34;
Get-WinGetPackageURL -ID &amp;#34;ZeroTier.ZeroTierOne&amp;#34; -Name &amp;#34;ZeroTier_One&amp;#34; -Type &amp;#34;msi&amp;#34; -Class &amp;#34;Applications&amp;#34;

# 软件包计数：用于对照日志查缺补漏
Write-Output &amp;#34;Total: $Script:PackageCount`n&amp;#34; | Tee-Object $Script:PackageList -Append
Write-Output &amp;#34;Write-Output `&amp;#34;Total: `$Script:PackageLocalCount``n`&amp;#34;&amp;#34; | Out-File $Script:PackageScriptIWR -Append
Write-Output &amp;#34;Write-Output `&amp;#34;Total: `$Script:PackageLocalCount``n`&amp;#34;&amp;#34; | Out-File $Script:PackageScriptSBT -Append
Write-Output &amp;#34;Write-Output `&amp;#34;Total: `$Script:PackageLocalCount``n`&amp;#34;&amp;#34; | Out-File $Script:PackageScriptWCD -Append

# 查看日志文件
explorer &amp;#34;${env:LOCALAPPDATA}\Packages\Microsoft.DesktopAppInstaller_8wekyb3d8bbwe\LocalState\DiagOutputDir&amp;#34;
Remove-Item &amp;#34;${env:LOCALAPPDATA}\Packages\Microsoft.DesktopAppInstaller_8wekyb3d8bbwe\LocalState\DiagOutputDir\*&amp;#34; -Recurse -Force -Confirm
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这段代码的作用是将指定好的软件包的信息从 WinGet 上爬取下来，并自动生成用于下载这些软件包的脚本。将此段代码复制另存为 Get-PackagesInfo.ps1 ，在 PowerShell 中跳转到脚本所在目录运行脚本，若遇到了权限问题，请用管理员权限打开 PowerShell 环境，并正确指定本地计算机的 PowerShell 执行策略
完成上述步骤，就可以在 PowerShell 环境下执行这个脚本了：
&lt;code&gt;.\Get-PackagesInfo.ps1&lt;/code&gt;
执行后，脚本会自动从 WinGet 配置的源下载安装包的信息，稍等片刻&lt;/p&gt;
&lt;p&gt;运行完毕后，在当前目录会自动生成 3 个新的 PS 脚本，用于将 Get-PackagesInfo.ps1 这个脚本中指定的软件包按分类从 WinGet 源下载到 PackageInstallers 目录下的分类目录中
&lt;img src=&#34;https://cloud.yuchu.me/f/GzUA/winget_ps.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;winget_ps&#34;
	
	
&gt;
这三个脚本的功能完全一致，只是用于下载采用的实现不同：&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Get-PackageInstallersIWR.ps1&amp;rdquo; 使用 cmdlet Invoke-WebRequest 下载&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Get-PackageInstallersSBT.ps1&amp;rdquo; 使用 cmdlet Start-BitsTransfer 下载&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Get-PackageInstallersWCD.ps1&amp;rdquo; 创建 System.Net.WebClient 对象下载
任选其一即可&lt;/p&gt;
&lt;h1 id=&#34;end&#34;&gt;&lt;a href=&#34;#end&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;END
&lt;/h1&gt;</description>
        </item>
        
    </channel>
</rss>
