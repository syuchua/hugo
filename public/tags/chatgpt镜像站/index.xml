<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Chatgpt镜像站 on YuChu&#39;s Blog</title>
        <link>http://localhost:1313/tags/chatgpt%E9%95%9C%E5%83%8F%E7%AB%99/</link>
        <description>Recent content in Chatgpt镜像站 on YuChu&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <lastBuildDate>Sun, 14 Apr 2024 17:30:22 +0800</lastBuildDate><atom:link href="http://localhost:1313/tags/chatgpt%E9%95%9C%E5%83%8F%E7%AB%99/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>3分钟搭建一个ChatGPT镜像站，非api，支持官网账号登录</title>
        <link>http://localhost:1313/posts/3%E5%88%86%E9%92%9F%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AAchatgpt%E9%95%9C%E5%83%8F%E7%AB%99%E9%9D%9Eapi%E6%94%AF%E6%8C%81%E5%AE%98%E7%BD%91%E8%B4%A6%E5%8F%B7%E7%99%BB%E5%BD%95/</link>
        <pubDate>Sun, 14 Apr 2024 17:30:22 +0800</pubDate>
        
        <guid>http://localhost:1313/posts/3%E5%88%86%E9%92%9F%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AAchatgpt%E9%95%9C%E5%83%8F%E7%AB%99%E9%9D%9Eapi%E6%94%AF%E6%8C%81%E5%AE%98%E7%BD%91%E8%B4%A6%E5%8F%B7%E7%99%BB%E5%BD%95/</guid>
        <description>&lt;p&gt;本篇基于github上的开源项目&lt;a class=&#34;link&#34; href=&#34;https://github.com/xyhelper/chatgpt-mirror-server&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/xyhelper/chatgpt-mirror-server&lt;/a&gt;旨在通过简单的操作搭建一个ChatGPT的个人镜像，绕过cloudflare，提升访问速度，且没有烦人的机器人验证步骤，可本地搭建，也可部署在服务器上，通过登录官网账号的方式，非api模式，提高回答准确性。同时，基于共享账号的普遍存在，可以实现成本远低于api模式的GPT4和GPTs使用。&lt;/p&gt;
&lt;h1 id=&#34;前置条件&#34;&gt;&lt;a href=&#34;#%e5%89%8d%e7%bd%ae%e6%9d%a1%e4%bb%b6&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;前置条件
&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;一台至少 2 核 2G 内存的服务器,推荐使用香港、新加坡、日本地区的服务器,可以 兼顾国内访问。(本地搭建的话可忽略)&lt;/li&gt;
&lt;li&gt;安装了 docker 和 docker-compose&lt;/li&gt;
&lt;li&gt;安装了 git&lt;/li&gt;
&lt;li&gt;有官网直登账号(不支持谷歌、微软、苹果等第三方登陆账号)&lt;/li&gt;
&lt;li&gt;一个域名（用于反代，可忽略）&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;准备工作&#34;&gt;&lt;a href=&#34;#%e5%87%86%e5%a4%87%e5%b7%a5%e4%bd%9c&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;准备工作
&lt;/h1&gt;&lt;p&gt;打开服务器，输入：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;apt update -y &amp;amp;&amp;amp; apt upgrade -y &amp;amp;&amp;amp; apt install -y vim wget curl   #出现报错可能是权限问题，用`sudo su`提权至root用户
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;自动部署&#34;&gt;&lt;a href=&#34;#%e8%87%aa%e5%8a%a8%e9%83%a8%e7%bd%b2&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;自动部署
&lt;/h1&gt;&lt;p&gt;直接下载执行官方的一键部署脚本&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;curl -sSfL https://raw.githubusercontent.com/xyhelper/chatgpt-mirror-server-deploy/master/quick-install.sh | bash
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;手动部署&#34;&gt;&lt;a href=&#34;#%e6%89%8b%e5%8a%a8%e9%83%a8%e7%bd%b2&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;手动部署
&lt;/h1&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git clone --depth=1 https://github.com/xyhelper/chatgpt-mirror-server-deploy.git chatgpt-mirror                 # 克隆项目地址
cd chatgpt-mirror              #进入根目录
./deploy.sh                    #启动部署脚本，等待拉取docker镜像
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;进入管理后台进行基础配置&#34;&gt;&lt;a href=&#34;#%e8%bf%9b%e5%85%a5%e7%ae%a1%e7%90%86%e5%90%8e%e5%8f%b0%e8%bf%9b%e8%a1%8c%e5%9f%ba%e7%a1%80%e9%85%8d%e7%bd%ae&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;进入管理后台进行基础配置
&lt;/h1&gt;&lt;p&gt;访问&lt;code&gt;http://服务器ip地址:8200/xyhelper&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;默认用户名&lt;code&gt;admin&lt;/code&gt;，密码&lt;code&gt;123456&lt;/code&gt;
&lt;img src=&#34;https://cloud.yuchu.me/f/8QCY/chat-mirror.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;进入后台左边点击工作台-账号管理，添加自己的ChatGPT官网账号勾选启用（plus用户切记勾选plus），再进入用户管理，添加一个用户，过期日期和user-token都可以自定义，保存。复制user-token，返回首页，粘贴。&lt;/p&gt;
&lt;h3 id=&#34;一个小细节&#34;&gt;&lt;a href=&#34;#%e4%b8%80%e4%b8%aa%e5%b0%8f%e7%bb%86%e8%8a%82&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;一个小细节
&lt;/h3&gt;&lt;p&gt;如果你是plus用户，或者使用的是共享账号，想把这个镜像站分享给其他人，又想省去每次都输入token的麻烦，不妨自定义ygusertoken，比方说我设置的是&lt;code&gt;1145141919810hhhhaaa&lt;/code&gt;，然后把这个链接：&lt;code&gt;http://yourip:8200/login_token?access_token=1145141919810hhhhaaa&lt;/code&gt;分享出去，这样就·不用·每次都登录了。&lt;/p&gt;
&lt;h1 id=&#34;配置nginx反代&#34;&gt;&lt;a href=&#34;#%e9%85%8d%e7%bd%aenginx%e5%8f%8d%e4%bb%a3&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;配置nginx反代
&lt;/h1&gt;&lt;p&gt;新建nginx配置目录：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;mkdir -p /home/nginx

touch /home/nginx/nginx.conf

mkdir -p /home/nginx/certs
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;申请证书&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;curl https://get.acme.sh | sh

~/.acme.sh/acme.sh --register-account -m xxxx@gmail.com   #随便一个邮箱就行


~/.acme.sh/acme.sh --issue -d yourip.com --standalone     # yourip.com改为你的域名
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;下载证书到本地&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;~/.acme.sh/acme.sh --installcert -d yourip.com --key-file /home/nginx/certs/key.pem --fullchain-file /home/nginx/certs/cert.pem
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;填写nginx配置文件
&lt;code&gt;cd /home/nginx/ &amp;amp;&amp;amp; vim nginx.conf&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;events {

    worker_connections  1024;

}



http {



  client_max_body_size 1000m;  

  #上传限制参数1G以内文件可上传



  server {

    listen 80;

    server_name yourip.com;         # 同理，替换为你的域名

    return 301 https://$host$request_uri;

  }



  server {

    listen 443 ssl http2;

    server_name yourip.com;         # 替换域名

    ssl_certificate /etc/nginx/certs/cert.pem;

    ssl_certificate_key /etc/nginx/certs/key.pem;

    location / {

      proxy_pass http://127.0.0.1:8200;

      proxy_set_header Host $host;

      proxy_set_header X-Real-IP $remote_addr;

      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    }

  }

}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;拉取部署nginx容器&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker run -d --name nginx -p 80:80 -p 443:443 -v /home/nginx/nginx.conf:/etc/nginx/nginx.conf -v /home/nginx/certs:/etc/nginx/certs -v /home/nginx/html:/usr/share/nginx/html nginx:latest
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;之后就可以用域名访问啦！&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
